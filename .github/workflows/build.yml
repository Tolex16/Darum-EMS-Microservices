name: Build & Deploy Darum EMS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

env:
  JAVA_VERSION: '17'
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

jobs:
  build:
    name: üèóÔ∏è Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: ‚òï Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: üß± Build and run tests (multi-module)
        run: mvn -B clean verify --file pom.xml

      - name: üì¶ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-artifacts
          path: |
            **/target/*.jar
            !**/original-*.jar

docker:
  name: üê≥ Build & Push Docker Images
  runs-on: ubuntu-latest
  needs: build

  permissions:
    contents: read
    packages: write

  steps:
    - name: üß© Checkout repository
      uses: actions/checkout@v4

    - name: üîê Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: üèóÔ∏è Build and push microservice images
      run: |
        declare -a SERVICES=("platform/config-server" "platform/discovery-service" "platform/api-gateway" "services/auth-service" "services/employee-service")

        for SERVICE in "${SERVICES[@]}"; do
          NAME=$(basename "$SERVICE")
          # force lowercase namespace to avoid "invalid tag" errors
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE,, }}/darum-ems-${NAME}:${GITHUB_SHA}"
          echo "üöÄ Building $NAME ‚Üí $IMAGE"
          docker build -t "$IMAGE" "$SERVICE"
          docker push "$IMAGE"
        done

    - name: üè∑Ô∏è Tag latest for main branch
      if: github.ref == 'refs/heads/main'
      run: |
        declare -a SERVICES=("platform/config-server" "platform/discovery-service" "platform/api-gateway" "services/auth-service" "services/employee-service")
        for SERVICE in "${SERVICES[@]}"; do
          NAME=$(basename "$SERVICE")
          SHA_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE,, }}/darum-ems-${NAME}:${GITHUB_SHA}"
          LATEST_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE,, }}/darum-ems-${NAME}:latest"
          docker tag "$SHA_IMAGE" "$LATEST_IMAGE"
          docker push "$LATEST_IMAGE"
        done
